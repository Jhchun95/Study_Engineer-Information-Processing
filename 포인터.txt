< C언어 포인터에 대해서 알아보자>
포인터 : 메모리 주소 '값' , 변수의 주소
포인터 변수 : 변수의 주소를 저장할 때 사용하는 변수

* : 포인터 변수를 선언할 때는 자료의 형을 먼저 쓰고 변수명 앞에 간접 연산자 *를 붙임
& : 변수의 주소를 알아낼 때는 변수 앞에 번지 연산자 &를 붙임

#include <stdio.h>
int main() {
	int num = 5;
	int * ptr = &num;.

	printf("ptr : %d\n", *ptr);

	return 0;            
}
// num이 가지고 있는 5를 출력하고 싶다면 ptr라는 변수에 *을 붙어서 *ptr로 나타내면 된다.

#include <stdio.h>
int main() {
	int a = 50;
	// *b는 b가 가리키고 있는(a의 주소)에 저장되어 있는 값
	int *b;
	// 포인터 변수 b에 a의 주소를 저장 
	b = &a;
	// *b = *b+20; 라는 수식은 b가 가리키고 있는 주소(a의 주소)의 데이터 값에 20을 더하는 수식이다.
	// 따라서 b는 a의 주소를 저장하고 있으므로 a의 주소에 있는 데이터 값이 변경되어 결국 a의 값이 50+20이 되어 70이 된다.(re)
	*b = *b + 20;
	// a, b 값 
	printf("%d, %d", a, *b);
}
// 정처기 주요 문제

// 값 : 70, 70


// #include <stdio.h> 
// int main() { 
//	int a = 4, b = 3, c = 5, d = 7; 
//	int r1, r2, r3, r4; 
	
//	r1 = 10 % a++; 
//	r2 = b > 3 && b > 2; 
//	r3 = c & d; r4 = d << 3; 
//	printf("%d, %d, %d, %d", r1, r2, r3, r4); 
// }



